name: Test and coverage

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Install Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.15
      - name: Install dependencies and run code generation
        run: |
          make go-install-mockgen
          go generate ./...
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2.5.1
        with:
          version: v1.32
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 1.15.x ]
        mongodb-version: [ 4.2 ]
    steps:
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-replica-set: tvisodb
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2.1.3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2.3.4
      - name: Run tests
        run: go test -v -race -covermode=atomic ./...
  coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 1.15.x ]
        mongodb-version: [ 4.2 ]
    steps:
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}
          mongodb-replica-set: tvisodb
      - name: Install Go
        if: success()
        uses: actions/setup-go@v2.1.3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2.3.4
      - name: Calc coverage
        run: |
          go test -v -covermode=count -coverprofile=coverage.out ./...
      - name: Upload coverage to Codecov
        env:
          TOKEN: ${{ secrets.CODECOV_UPLOAD_TOKEN }}
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_UPLOAD_TOKEN }}
          file: ./coverage.out
          flags: tests
          name: codecov-umbrella
          fail_ci_if_error: true
